{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"react-native\"),\n      NativeModules = _require.NativeModules;\n\n  var RCTAsyncStorage = NativeModules.RNC_AsyncSQLiteDBStorage || NativeModules.RNCAsyncStorage || NativeModules.PlatformLocalStorage;\n\n  if (!RCTAsyncStorage) {\n    throw new Error(\"[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\\n\\nTo fix this issue try these steps:\\n\\n  \\u2022 Run `react-native link @react-native-community/async-storage` in the project root.\\n\\n  \\u2022 Rebuild and restart the app.\\n\\n  \\u2022 Run the packager with `--clearCache` flag.\\n\\n  \\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app.\\n\\n  \\u2022 If this happens while testing with Jest, check out docs how to integrate AsyncStorage with it: https://github.com/react-native-community/async-storage/blob/LEGACY/docs/Jest-integration.md\\n\\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-community/react-native-async-storage/issues \\n\");\n  }\n\n  function checkValueTypeNotString(value, usedKey) {\n    if (typeof value !== 'string') {\n      console.warn(\"[AsyncStorage] The value for key \\\"\" + usedKey + \"\\\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\");\n    }\n  }\n\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiSet([[key, value]], function (errors) {\n          checkValueTypeNotString(value, key);\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.clear(function (error) {\n          var err = convertError(error);\n          callback && callback(err);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.getAllKeys(function (error, keys) {\n          var err = convertError(error);\n          callback && callback(err, keys);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n      RCTAsyncStorage.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        keyValuePairs.forEach(function (_ref3) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n              key = _ref4[0],\n              value = _ref4[1];\n\n          checkValueTypeNotString(value, key);\n        });\n        RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!RCTAsyncStorage.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  var _default = AsyncStorage;\n  exports.default = _default;\n});","map":[[2,0,12,0],[13,17,14,24,"require"],[13,28,14,31],[13,63],[14,6,14,7,"NativeModules"],[14,19],[14,31,14,7,"NativeModules"],[14,44],[16,0,16,0],[16,6,16,6,"RCTAsyncStorage"],[16,21,16,21],[16,24,17,2,"NativeModules"],[16,37,17,15],[16,38,17,16,"RNC_AsyncSQLiteDBStorage"],[16,62,17,2],[16,66,18,2,"NativeModules"],[16,79,18,15],[16,80,18,16,"RNCAsyncStorage"],[16,95,17,2],[16,99,19,2,"NativeModules"],[16,112,19,15],[16,113,19,16,"PlatformLocalStorage"],[16,133,16,0],[18,0,21,0],[18,6,21,4],[18,7,21,5,"RCTAsyncStorage"],[18,22,21,0],[18,24,21,22],[19,0,22,2],[19,10,22,8],[19,14,22,12,"Error"],[19,19,22,8],[19,794,22,2],[20,0,38,1],[22,0,55,0],[22,11,55,9,"checkValueTypeNotString"],[22,34,55,0],[22,35,55,33,"value"],[22,40,55,0],[22,42,55,45,"usedKey"],[22,49,55,0],[22,51,55,62],[23,0,56,2],[23,8,56,6],[23,15,56,13,"value"],[23,20,56,6],[23,25,56,23],[23,33,56,2],[23,35,56,33],[24,0,57,4,"console"],[24,6,57,4,"console"],[24,13,57,11],[24,14,57,12,"warn"],[24,18,57,4],[24,59,58,43,"usedKey"],[24,66,57,4],[25,0,60,3],[26,0,61,1],[28,0,70,0],[28,6,70,6,"AsyncStorage"],[28,18,70,18],[28,21,70,21],[29,0,71,2,"_getRequests"],[29,4,71,2,"_getRequests"],[29,16,71,14],[29,18,71,17],[29,20,70,21],[30,0,72,2,"_getKeys"],[30,4,72,2,"_getKeys"],[30,12,72,10],[30,14,72,13],[30,16,70,21],[31,0,73,2,"_immediate"],[31,4,73,2,"_immediate"],[31,14,73,12],[31,16,73,15],[31,20,70,21],[32,0,80,2,"getItem"],[32,4,80,2,"getItem"],[32,11,80,9],[32,13,80,11],[32,30,81,4,"key"],[32,33,80,11],[32,35,82,4,"callback"],[32,43,80,11],[32,45,83,28],[33,0,84,4],[33,13,84,11],[33,17,84,15,"Promise"],[33,24,84,11],[33,25,84,23],[33,35,84,24,"resolve"],[33,42,84,23],[33,44,84,33,"reject"],[33,50,84,23],[33,52,84,44],[34,0,85,6,"RCTAsyncStorage"],[34,8,85,6,"RCTAsyncStorage"],[34,23,85,21],[34,24,85,22,"multiGet"],[34,32,85,6],[34,33,85,31],[34,34,85,32,"key"],[34,37,85,31],[34,38,85,6],[34,40,85,38],[34,50,85,47,"errors"],[34,56,85,38],[34,58,85,55,"result"],[34,64,85,38],[34,66,85,63],[35,0,87,8],[35,14,87,14,"value"],[35,19,87,19],[35,22,87,22,"result"],[35,28,87,28],[35,32,87,32,"result"],[35,38,87,38],[35,39,87,39],[35,40,87,38],[35,41,87,22],[35,45,87,45,"result"],[35,51,87,51],[35,52,87,52],[35,53,87,51],[35,54,87,45],[35,55,87,55],[35,56,87,45],[35,57,87,22],[35,60,87,60,"result"],[35,66,87,66],[35,67,87,67],[35,68,87,66],[35,69,87,60],[35,70,87,70],[35,71,87,60],[35,72,87,22],[35,75,87,75],[35,79,87,8],[36,0,88,8],[36,14,88,14,"errs"],[36,18,88,18],[36,21,88,21,"convertErrors"],[36,34,88,34],[36,35,88,35,"errors"],[36,41,88,34],[36,42,88,8],[37,0,89,8,"callback"],[37,10,89,8,"callback"],[37,18,89,16],[37,22,89,20,"callback"],[37,30,89,28],[37,31,89,29,"errs"],[37,35,89,33],[37,39,89,37,"errs"],[37,43,89,41],[37,44,89,42],[37,45,89,41],[37,46,89,28],[37,48,89,46,"value"],[37,53,89,28],[37,54,89,8],[39,0,90,8],[39,14,90,12,"errs"],[39,18,90,8],[39,20,90,18],[40,0,91,10,"reject"],[40,12,91,10,"reject"],[40,18,91,16],[40,19,91,17,"errs"],[40,23,91,21],[40,24,91,22],[40,25,91,21],[40,26,91,16],[40,27,91,10],[41,0,92,9],[41,11,90,8],[41,17,92,15],[42,0,93,10,"resolve"],[42,12,93,10,"resolve"],[42,19,93,17],[42,20,93,18,"value"],[42,25,93,17],[42,26,93,10],[43,0,94,9],[44,0,95,7],[44,9,85,6],[45,0,96,5],[45,7,84,11],[45,8,84,4],[46,0,97,3],[46,5,70,21],[47,0,104,2,"setItem"],[47,4,104,2,"setItem"],[47,11,104,9],[47,13,104,11],[47,30,105,4,"key"],[47,33,104,11],[47,35,106,4,"value"],[47,40,104,11],[47,42,107,4,"callback"],[47,50,104,11],[47,52,108,19],[48,0,109,4],[48,13,109,11],[48,17,109,15,"Promise"],[48,24,109,11],[48,25,109,23],[48,35,109,24,"resolve"],[48,42,109,23],[48,44,109,33,"reject"],[48,50,109,23],[48,52,109,44],[49,0,110,6,"RCTAsyncStorage"],[49,8,110,6,"RCTAsyncStorage"],[49,23,110,21],[49,24,110,22,"multiSet"],[49,32,110,6],[49,33,110,31],[49,34,110,32],[49,35,110,33,"key"],[49,38,110,32],[49,40,110,38,"value"],[49,45,110,32],[49,46,110,31],[49,47,110,6],[49,49,110,47],[49,59,110,56,"errors"],[49,65,110,47],[49,67,110,64],[50,0,111,8,"checkValueTypeNotString"],[50,10,111,8,"checkValueTypeNotString"],[50,33,111,31],[50,34,111,32,"value"],[50,39,111,31],[50,41,111,39,"key"],[50,44,111,31],[50,45,111,8],[51,0,112,8],[51,14,112,14,"errs"],[51,18,112,18],[51,21,112,21,"convertErrors"],[51,34,112,34],[51,35,112,35,"errors"],[51,41,112,34],[51,42,112,8],[52,0,113,8,"callback"],[52,10,113,8,"callback"],[52,18,113,16],[52,22,113,20,"callback"],[52,30,113,28],[52,31,113,29,"errs"],[52,35,113,33],[52,39,113,37,"errs"],[52,43,113,41],[52,44,113,42],[52,45,113,41],[52,46,113,28],[52,47,113,8],[54,0,114,8],[54,14,114,12,"errs"],[54,18,114,8],[54,20,114,18],[55,0,115,10,"reject"],[55,12,115,10,"reject"],[55,18,115,16],[55,19,115,17,"errs"],[55,23,115,21],[55,24,115,22],[55,25,115,21],[55,26,115,16],[55,27,115,10],[56,0,116,9],[56,11,114,8],[56,17,116,15],[57,0,117,10,"resolve"],[57,12,117,10,"resolve"],[57,19,117,17],[57,20,117,18],[57,24,117,17],[57,25,117,10],[58,0,118,9],[59,0,119,7],[59,9,110,6],[60,0,120,5],[60,7,109,11],[60,8,109,4],[61,0,121,3],[61,5,70,21],[62,0,128,2,"removeItem"],[62,4,128,2,"removeItem"],[62,14,128,12],[62,16,128,14],[62,36,129,4,"key"],[62,39,128,14],[62,41,130,4,"callback"],[62,49,128,14],[62,51,131,19],[63,0,132,4],[63,13,132,11],[63,17,132,15,"Promise"],[63,24,132,11],[63,25,132,23],[63,35,132,24,"resolve"],[63,42,132,23],[63,44,132,33,"reject"],[63,50,132,23],[63,52,132,44],[64,0,133,6,"RCTAsyncStorage"],[64,8,133,6,"RCTAsyncStorage"],[64,23,133,21],[64,24,133,22,"multiRemove"],[64,35,133,6],[64,36,133,34],[64,37,133,35,"key"],[64,40,133,34],[64,41,133,6],[64,43,133,41],[64,53,133,50,"errors"],[64,59,133,41],[64,61,133,58],[65,0,134,8],[65,14,134,14,"errs"],[65,18,134,18],[65,21,134,21,"convertErrors"],[65,34,134,34],[65,35,134,35,"errors"],[65,41,134,34],[65,42,134,8],[66,0,135,8,"callback"],[66,10,135,8,"callback"],[66,18,135,16],[66,22,135,20,"callback"],[66,30,135,28],[66,31,135,29,"errs"],[66,35,135,33],[66,39,135,37,"errs"],[66,43,135,41],[66,44,135,42],[66,45,135,41],[66,46,135,28],[66,47,135,8],[68,0,136,8],[68,14,136,12,"errs"],[68,18,136,8],[68,20,136,18],[69,0,137,10,"reject"],[69,12,137,10,"reject"],[69,18,137,16],[69,19,137,17,"errs"],[69,23,137,21],[69,24,137,22],[69,25,137,21],[69,26,137,16],[69,27,137,10],[70,0,138,9],[70,11,136,8],[70,17,138,15],[71,0,139,10,"resolve"],[71,12,139,10,"resolve"],[71,19,139,17],[71,20,139,18],[71,24,139,17],[71,25,139,10],[72,0,140,9],[73,0,141,7],[73,9,133,6],[74,0,142,5],[74,7,132,11],[74,8,132,4],[75,0,143,3],[75,5,70,21],[76,0,153,2,"mergeItem"],[76,4,153,2,"mergeItem"],[76,13,153,11],[76,15,153,13],[76,34,154,4,"key"],[76,37,153,13],[76,39,155,4,"value"],[76,44,153,13],[76,46,156,4,"callback"],[76,54,153,13],[76,56,157,19],[77,0,158,4],[77,13,158,11],[77,17,158,15,"Promise"],[77,24,158,11],[77,25,158,23],[77,35,158,24,"resolve"],[77,42,158,23],[77,44,158,33,"reject"],[77,50,158,23],[77,52,158,44],[78,0,159,6,"RCTAsyncStorage"],[78,8,159,6,"RCTAsyncStorage"],[78,23,159,21],[78,24,159,22,"multiMerge"],[78,34,159,6],[78,35,159,33],[78,36,159,34],[78,37,159,35,"key"],[78,40,159,34],[78,42,159,40,"value"],[78,47,159,34],[78,48,159,33],[78,49,159,6],[78,51,159,49],[78,61,159,58,"errors"],[78,67,159,49],[78,69,159,66],[79,0,160,8],[79,14,160,14,"errs"],[79,18,160,18],[79,21,160,21,"convertErrors"],[79,34,160,34],[79,35,160,35,"errors"],[79,41,160,34],[79,42,160,8],[80,0,161,8,"callback"],[80,10,161,8,"callback"],[80,18,161,16],[80,22,161,20,"callback"],[80,30,161,28],[80,31,161,29,"errs"],[80,35,161,33],[80,39,161,37,"errs"],[80,43,161,41],[80,44,161,42],[80,45,161,41],[80,46,161,28],[80,47,161,8],[82,0,162,8],[82,14,162,12,"errs"],[82,18,162,8],[82,20,162,18],[83,0,163,10,"reject"],[83,12,163,10,"reject"],[83,18,163,16],[83,19,163,17,"errs"],[83,23,163,21],[83,24,163,22],[83,25,163,21],[83,26,163,16],[83,27,163,10],[84,0,164,9],[84,11,162,8],[84,17,164,15],[85,0,165,10,"resolve"],[85,12,165,10,"resolve"],[85,19,165,17],[85,20,165,18],[85,24,165,17],[85,25,165,10],[86,0,166,9],[87,0,167,7],[87,9,159,6],[88,0,168,5],[88,7,158,11],[88,8,158,4],[89,0,169,3],[89,5,70,21],[90,0,178,2,"clear"],[90,4,178,2,"clear"],[90,9,178,7],[90,11,178,9],[90,26,178,18,"callback"],[90,34,178,9],[90,36,178,70],[91,0,179,4],[91,13,179,11],[91,17,179,15,"Promise"],[91,24,179,11],[91,25,179,23],[91,35,179,24,"resolve"],[91,42,179,23],[91,44,179,33,"reject"],[91,50,179,23],[91,52,179,44],[92,0,180,6,"RCTAsyncStorage"],[92,8,180,6,"RCTAsyncStorage"],[92,23,180,21],[92,24,180,22,"clear"],[92,29,180,6],[92,30,180,28],[92,40,180,37,"error"],[92,45,180,28],[92,47,180,44],[93,0,181,8],[93,14,181,14,"err"],[93,17,181,17],[93,20,181,20,"convertError"],[93,32,181,32],[93,33,181,33,"error"],[93,38,181,32],[93,39,181,8],[94,0,182,8,"callback"],[94,10,182,8,"callback"],[94,18,182,16],[94,22,182,20,"callback"],[94,30,182,28],[94,31,182,29,"err"],[94,34,182,28],[94,35,182,8],[96,0,183,8],[96,14,183,12,"err"],[96,17,183,8],[96,19,183,17],[97,0,184,10,"reject"],[97,12,184,10,"reject"],[97,18,184,16],[97,19,184,17,"err"],[97,22,184,16],[97,23,184,10],[98,0,185,9],[98,11,183,8],[98,17,185,15],[99,0,186,10,"resolve"],[99,12,186,10,"resolve"],[99,19,186,17],[99,20,186,18],[99,24,186,17],[99,25,186,10],[100,0,187,9],[101,0,188,7],[101,9,180,6],[102,0,189,5],[102,7,179,11],[102,8,179,4],[103,0,190,3],[103,5,70,21],[104,0,197,2,"getAllKeys"],[104,4,197,2,"getAllKeys"],[104,14,197,12],[104,16,197,14],[104,36,198,4,"callback"],[104,44,197,14],[104,46,199,34],[105,0,200,4],[105,13,200,11],[105,17,200,15,"Promise"],[105,24,200,11],[105,25,200,23],[105,35,200,24,"resolve"],[105,42,200,23],[105,44,200,33,"reject"],[105,50,200,23],[105,52,200,44],[106,0,201,6,"RCTAsyncStorage"],[106,8,201,6,"RCTAsyncStorage"],[106,23,201,21],[106,24,201,22,"getAllKeys"],[106,34,201,6],[106,35,201,33],[106,45,201,42,"error"],[106,50,201,33],[106,52,201,49,"keys"],[106,56,201,33],[106,58,201,55],[107,0,202,8],[107,14,202,14,"err"],[107,17,202,17],[107,20,202,20,"convertError"],[107,32,202,32],[107,33,202,33,"error"],[107,38,202,32],[107,39,202,8],[108,0,203,8,"callback"],[108,10,203,8,"callback"],[108,18,203,16],[108,22,203,20,"callback"],[108,30,203,28],[108,31,203,29,"err"],[108,34,203,28],[108,36,203,34,"keys"],[108,40,203,28],[108,41,203,8],[110,0,204,8],[110,14,204,12,"err"],[110,17,204,8],[110,19,204,17],[111,0,205,10,"reject"],[111,12,205,10,"reject"],[111,18,205,16],[111,19,205,17,"err"],[111,22,205,16],[111,23,205,10],[112,0,206,9],[112,11,204,8],[112,17,206,15],[113,0,207,10,"resolve"],[113,12,207,10,"resolve"],[113,19,207,17],[113,20,207,18,"keys"],[113,24,207,17],[113,25,207,10],[114,0,208,9],[115,0,209,7],[115,9,201,6],[116,0,210,5],[116,7,200,11],[116,8,200,4],[117,0,211,3],[117,5,70,21],[118,0,228,2,"flushGetRequests"],[118,4,228,2,"flushGetRequests"],[118,20,228,18],[118,22,228,20],[118,50,228,37],[119,0,229,4],[119,10,229,10,"getRequests"],[119,21,229,21],[119,24,229,24],[119,29,229,29,"_getRequests"],[119,41,229,4],[120,0,230,4],[120,10,230,10,"getKeys"],[120,17,230,17],[120,20,230,20],[120,25,230,25,"_getKeys"],[120,33,230,4],[121,0,232,4],[121,11,232,9,"_getRequests"],[121,23,232,4],[121,26,232,24],[121,28,232,4],[122,0,233,4],[122,11,233,9,"_getKeys"],[122,19,233,4],[122,22,233,20],[122,24,233,4],[123,0,235,4,"RCTAsyncStorage"],[123,6,235,4,"RCTAsyncStorage"],[123,21,235,19],[123,22,235,20,"multiGet"],[123,30,235,4],[123,31,235,29,"getKeys"],[123,38,235,4],[123,40,235,38],[123,50,235,47,"errors"],[123,56,235,38],[123,58,235,55,"result"],[123,64,235,38],[123,66,235,63],[124,0,242,6],[124,12,242,12,"map"],[124,15,242,15],[124,18,242,18],[124,20,242,6],[125,0,243,6,"result"],[125,8,243,6,"result"],[125,14,243,12],[125,18,244,8,"result"],[125,24,244,14],[125,25,244,15,"forEach"],[125,32,244,8],[125,33,244,23],[125,49,244,41],[126,0,244,41],[127,0,244,41],[127,14,244,25,"key"],[127,17,244,41],[128,0,244,41],[128,14,244,30,"value"],[128,19,244,41],[130,0,245,10,"map"],[130,10,245,10,"map"],[130,13,245,13],[130,14,245,14,"key"],[130,17,245,13],[130,18,245,10],[130,21,245,21,"value"],[130,26,245,10],[131,0,246,10],[131,17,246,17,"value"],[131,22,246,10],[132,0,247,9],[132,9,244,8],[132,10,243,6],[133,0,248,6],[133,12,248,12,"reqLength"],[133,21,248,21],[133,24,248,24,"getRequests"],[133,35,248,35],[133,36,248,36,"length"],[133,42,248,6],[135,0,249,6],[135,13,249,11],[135,17,249,15,"i"],[135,18,249,16],[135,21,249,19],[135,22,249,6],[135,24,249,22,"i"],[135,25,249,23],[135,28,249,26,"reqLength"],[135,37,249,6],[135,39,249,37,"i"],[135,40,249,38],[135,42,249,6],[135,44,249,42],[136,0,250,8],[136,14,250,14,"request"],[136,21,250,21],[136,24,250,24,"getRequests"],[136,35,250,35],[136,36,250,36,"i"],[136,37,250,35],[136,38,250,8],[137,0,251,8],[137,14,251,14,"requestKeys"],[137,25,251,25],[137,28,251,28,"request"],[137,35,251,35],[137,36,251,36,"keys"],[137,40,251,8],[138,0,252,8],[138,14,252,14,"requestResult"],[138,27,252,27],[138,30,252,30,"requestKeys"],[138,41,252,41],[138,42,252,42,"map"],[138,45,252,30],[138,46,252,46],[138,56,252,46,"key"],[138,59,252,49],[139,0,252,49],[139,19,252,53],[139,20,252,54,"key"],[139,23,252,53],[139,25,252,59,"map"],[139,28,252,62],[139,29,252,63,"key"],[139,32,252,62],[139,33,252,53],[139,34,252,49],[140,0,252,49],[140,11,252,30],[140,12,252,8],[141,0,253,8,"request"],[141,10,253,8,"request"],[141,17,253,15],[141,18,253,16,"callback"],[141,26,253,8],[141,30,253,28,"request"],[141,37,253,35],[141,38,253,36,"callback"],[141,46,253,28],[141,47,253,45],[141,51,253,28],[141,53,253,51,"requestResult"],[141,66,253,28],[141,67,253,8],[142,0,254,8,"request"],[142,10,254,8,"request"],[142,17,254,15],[142,18,254,16,"resolve"],[142,25,254,8],[142,29,254,27,"request"],[142,36,254,34],[142,37,254,35,"resolve"],[142,44,254,27],[142,45,254,43,"requestResult"],[142,58,254,27],[142,59,254,8],[143,0,255,7],[144,0,256,5],[144,7,235,4],[145,0,257,3],[145,5,70,21],[146,0,266,2,"multiGet"],[146,4,266,2,"multiGet"],[146,12,266,10],[146,14,266,12],[146,32,267,4,"keys"],[146,36,266,12],[146,38,268,4,"callback"],[146,46,266,12],[146,48,269,51],[147,0,269,51],[149,0,270,4],[149,10,270,8],[149,11,270,9],[149,16,270,14,"_immediate"],[149,26,270,4],[149,28,270,26],[150,0,271,6],[150,13,271,11,"_immediate"],[150,23,271,6],[150,26,271,24,"setImmediate"],[150,38,271,36],[150,39,271,37],[150,51,271,43],[151,0,272,8],[151,10,272,8],[151,15,272,12],[151,16,272,13,"_immediate"],[151,26,272,8],[151,29,272,26],[151,33,272,8],[153,0,273,8],[153,10,273,8],[153,15,273,12],[153,16,273,13,"flushGetRequests"],[153,32,273,8],[154,0,274,7],[154,9,271,36],[154,10,271,6],[155,0,275,5],[157,0,277,4],[157,10,277,10,"getRequest"],[157,20,277,34],[157,23,277,37],[158,0,278,6,"keys"],[158,8,278,6,"keys"],[158,12,278,10],[158,14,278,12,"keys"],[158,18,277,37],[159,0,279,6,"callback"],[159,8,279,6,"callback"],[159,16,279,14],[159,18,279,16,"callback"],[159,26,277,37],[160,0,281,6,"keyIndex"],[160,8,281,6,"keyIndex"],[160,16,281,14],[160,18,281,16],[160,23,281,21,"_getKeys"],[160,31,281,16],[160,32,281,30,"length"],[160,38,277,37],[161,0,282,6,"resolve"],[161,8,282,6,"resolve"],[161,15,282,13],[161,17,282,15],[161,21,277,37],[162,0,283,6,"reject"],[162,8,283,6,"reject"],[162,14,283,12],[162,16,283,14],[163,0,277,37],[163,7,277,4],[164,0,286,4],[164,10,286,10,"promiseResult"],[164,23,286,23],[164,26,286,26],[164,30,286,30,"Promise"],[164,37,286,26],[164,38,286,38],[164,48,286,39,"resolve"],[164,55,286,38],[164,57,286,48,"reject"],[164,63,286,38],[164,65,286,59],[165,0,287,6,"getRequest"],[165,8,287,6,"getRequest"],[165,18,287,16],[165,19,287,17,"resolve"],[165,26,287,6],[165,29,287,27,"resolve"],[165,36,287,6],[166,0,288,6,"getRequest"],[166,8,288,6,"getRequest"],[166,18,288,16],[166,19,288,17,"reject"],[166,25,288,6],[166,28,288,26,"reject"],[166,34,288,6],[167,0,289,5],[167,7,286,26],[167,8,286,4],[169,0,291,4],[169,11,291,9,"_getRequests"],[169,23,291,4],[169,24,291,22,"push"],[169,28,291,4],[169,29,291,27,"getRequest"],[169,39,291,4],[171,0,293,4,"keys"],[171,6,293,4,"keys"],[171,10,293,8],[171,11,293,9,"forEach"],[171,18,293,4],[171,19,293,17],[171,29,293,17,"key"],[171,32,293,20],[171,34,293,24],[172,0,294,6],[172,12,294,10],[172,17,294,14],[172,18,294,15,"_getKeys"],[172,26,294,10],[172,27,294,24,"indexOf"],[172,34,294,10],[172,35,294,32,"key"],[172,38,294,10],[172,44,294,41],[172,45,294,42],[172,46,294,6],[172,48,294,45],[173,0,295,8],[173,10,295,8],[173,15,295,12],[173,16,295,13,"_getKeys"],[173,24,295,8],[173,25,295,22,"push"],[173,29,295,8],[173,30,295,27,"key"],[173,33,295,8],[174,0,296,7],[175,0,297,5],[175,7,293,4],[176,0,299,4],[176,13,299,11,"promiseResult"],[176,26,299,4],[177,0,300,3],[177,5,70,21],[178,0,308,2,"multiSet"],[178,4,308,2,"multiSet"],[178,12,308,10],[178,14,308,12],[178,32,309,4,"keyValuePairs"],[178,45,308,12],[178,47,310,4,"callback"],[178,55,308,12],[178,57,311,19],[179,0,312,4],[179,13,312,11],[179,17,312,15,"Promise"],[179,24,312,11],[179,25,312,23],[179,35,312,24,"resolve"],[179,42,312,23],[179,44,312,33,"reject"],[179,50,312,23],[179,52,312,44],[180,0,313,6,"keyValuePairs"],[180,8,313,6,"keyValuePairs"],[180,21,313,19],[180,22,313,20,"forEach"],[180,29,313,6],[180,30,313,28],[180,47,313,46],[181,0,313,46],[182,0,313,46],[182,14,313,30,"key"],[182,17,313,46],[183,0,313,46],[183,14,313,35,"value"],[183,19,313,46],[185,0,314,8,"checkValueTypeNotString"],[185,10,314,8,"checkValueTypeNotString"],[185,33,314,31],[185,34,314,32,"value"],[185,39,314,31],[185,41,314,39,"key"],[185,44,314,31],[185,45,314,8],[186,0,315,7],[186,9,313,6],[187,0,317,6,"RCTAsyncStorage"],[187,8,317,6,"RCTAsyncStorage"],[187,23,317,21],[187,24,317,22,"multiSet"],[187,32,317,6],[187,33,317,31,"keyValuePairs"],[187,46,317,6],[187,48,317,46],[187,58,317,55,"errors"],[187,64,317,46],[187,66,317,63],[188,0,318,8],[188,14,318,14,"error"],[188,19,318,19],[188,22,318,22,"convertErrors"],[188,35,318,35],[188,36,318,36,"errors"],[188,42,318,35],[188,43,318,8],[189,0,319,8,"callback"],[189,10,319,8,"callback"],[189,18,319,16],[189,22,319,20,"callback"],[189,30,319,28],[189,31,319,29,"error"],[189,36,319,28],[189,37,319,8],[191,0,320,8],[191,14,320,12,"error"],[191,19,320,8],[191,21,320,19],[192,0,321,10,"reject"],[192,12,321,10,"reject"],[192,18,321,16],[192,19,321,17,"error"],[192,24,321,16],[192,25,321,10],[193,0,322,9],[193,11,320,8],[193,17,322,15],[194,0,323,10,"resolve"],[194,12,323,10,"resolve"],[194,19,323,17],[194,20,323,18],[194,24,323,17],[194,25,323,10],[195,0,324,9],[196,0,325,7],[196,9,317,6],[197,0,326,5],[197,7,312,11],[197,8,312,4],[198,0,327,3],[198,5,70,21],[199,0,334,2,"multiRemove"],[199,4,334,2,"multiRemove"],[199,15,334,13],[199,17,334,15],[199,38,335,4,"keys"],[199,42,334,15],[199,44,336,4,"callback"],[199,52,334,15],[199,54,337,19],[200,0,338,4],[200,13,338,11],[200,17,338,15,"Promise"],[200,24,338,11],[200,25,338,23],[200,35,338,24,"resolve"],[200,42,338,23],[200,44,338,33,"reject"],[200,50,338,23],[200,52,338,44],[201,0,339,6,"RCTAsyncStorage"],[201,8,339,6,"RCTAsyncStorage"],[201,23,339,21],[201,24,339,22,"multiRemove"],[201,35,339,6],[201,36,339,34,"keys"],[201,40,339,6],[201,42,339,40],[201,52,339,49,"errors"],[201,58,339,40],[201,60,339,57],[202,0,340,8],[202,14,340,14,"error"],[202,19,340,19],[202,22,340,22,"convertErrors"],[202,35,340,35],[202,36,340,36,"errors"],[202,42,340,35],[202,43,340,8],[203,0,341,8,"callback"],[203,10,341,8,"callback"],[203,18,341,16],[203,22,341,20,"callback"],[203,30,341,28],[203,31,341,29,"error"],[203,36,341,28],[203,37,341,8],[205,0,342,8],[205,14,342,12,"error"],[205,19,342,8],[205,21,342,19],[206,0,343,10,"reject"],[206,12,343,10,"reject"],[206,18,343,16],[206,19,343,17,"error"],[206,24,343,16],[206,25,343,10],[207,0,344,9],[207,11,342,8],[207,17,344,15],[208,0,345,10,"resolve"],[208,12,345,10,"resolve"],[208,19,345,17],[208,20,345,18],[208,24,345,17],[208,25,345,10],[209,0,346,9],[210,0,347,7],[210,9,339,6],[211,0,348,5],[211,7,338,11],[211,8,338,4],[212,0,349,3],[212,5,70,21],[213,0,359,2,"multiMerge"],[213,4,359,2,"multiMerge"],[213,14,359,12],[213,16,359,14],[213,36,360,4,"keyValuePairs"],[213,49,359,14],[213,51,361,4,"callback"],[213,59,359,14],[213,61,362,19],[214,0,363,4],[214,13,363,11],[214,17,363,15,"Promise"],[214,24,363,11],[214,25,363,23],[214,35,363,24,"resolve"],[214,42,363,23],[214,44,363,33,"reject"],[214,50,363,23],[214,52,363,44],[215,0,364,6,"RCTAsyncStorage"],[215,8,364,6,"RCTAsyncStorage"],[215,23,364,21],[215,24,364,22,"multiMerge"],[215,34,364,6],[215,35,364,33,"keyValuePairs"],[215,48,364,6],[215,50,364,48],[215,60,364,57,"errors"],[215,66,364,48],[215,68,364,65],[216,0,365,8],[216,14,365,14,"error"],[216,19,365,19],[216,22,365,22,"convertErrors"],[216,35,365,35],[216,36,365,36,"errors"],[216,42,365,35],[216,43,365,8],[217,0,366,8,"callback"],[217,10,366,8,"callback"],[217,18,366,16],[217,22,366,20,"callback"],[217,30,366,28],[217,31,366,29,"error"],[217,36,366,28],[217,37,366,8],[219,0,367,8],[219,14,367,12,"error"],[219,19,367,8],[219,21,367,19],[220,0,368,10,"reject"],[220,12,368,10,"reject"],[220,18,368,16],[220,19,368,17,"error"],[220,24,368,16],[220,25,368,10],[221,0,369,9],[221,11,367,8],[221,17,369,15],[222,0,370,10,"resolve"],[222,12,370,10,"resolve"],[222,19,370,17],[222,20,370,18],[222,24,370,17],[222,25,370,10],[223,0,371,9],[224,0,372,7],[224,9,364,6],[225,0,373,5],[225,7,363,11],[225,8,363,4],[226,0,374,3],[227,0,70,21],[227,3,70,0],[229,0,378,0],[229,6,378,4],[229,7,378,5,"RCTAsyncStorage"],[229,22,378,20],[229,23,378,21,"multiMerge"],[229,33,378,0],[229,35,378,33],[230,0,379,2],[230,11,379,9,"AsyncStorage"],[230,23,379,21],[230,24,379,22,"mergeItem"],[230,33,379,2],[231,0,380,2],[231,11,380,9,"AsyncStorage"],[231,23,380,21],[231,24,380,22,"multiMerge"],[231,34,380,2],[232,0,381,1],[234,0,383,0],[234,11,383,9,"convertErrors"],[234,24,383,0],[234,25,383,23,"errs"],[234,29,383,0],[234,31,383,54],[235,0,384,2],[235,8,384,6],[235,9,384,7,"errs"],[235,13,384,2],[235,15,384,13],[236,0,385,4],[236,13,385,11],[236,17,385,4],[237,0,386,3],[239,0,387,2],[239,11,387,9],[239,12,387,10,"Array"],[239,17,387,15],[239,18,387,16,"isArray"],[239,25,387,10],[239,26,387,24,"errs"],[239,30,387,10],[239,34,387,32,"errs"],[239,38,387,10],[239,41,387,39],[239,42,387,40,"errs"],[239,46,387,39],[239,47,387,9],[239,49,387,47,"map"],[239,52,387,9],[239,53,387,51],[239,63,387,51,"e"],[239,64,387,52],[240,0,387,52],[240,13,387,56,"convertError"],[240,25,387,68],[240,26,387,69,"e"],[240,27,387,68],[240,28,387,52],[241,0,387,52],[241,5,387,9],[241,6,387,2],[242,0,388,1],[244,0,390,0],[244,11,390,9,"convertError"],[244,23,390,0],[244,24,390,22,"error"],[244,29,390,0],[244,31,390,37],[245,0,391,2],[245,8,391,6],[245,9,391,7,"error"],[245,14,391,2],[245,16,391,14],[246,0,392,4],[246,13,392,11],[246,17,392,4],[247,0,393,3],[249,0,394,2],[249,8,394,8,"out"],[249,11,394,11],[249,14,394,14],[249,18,394,18,"Error"],[249,23,394,14],[249,24,394,24,"error"],[249,29,394,29],[249,30,394,30,"message"],[249,37,394,14],[249,38,394,2],[250,0,396,2,"out"],[250,4,396,2,"out"],[250,7,396,5],[250,8,396,6,"key"],[250,11,396,2],[250,14,396,12,"error"],[250,19,396,17],[250,20,396,18,"key"],[250,23,396,2],[251,0,397,2],[251,11,397,9,"out"],[251,14,397,2],[252,0,398,1],[254,17,400,15,"AsyncStorage"],[254,29]]},"type":"js/module"}]}